filter {
    if ([manufacturer] == "cisco" ) {
        date {
            match => [
                "log_date",

                # IOS
                "MMM dd HH:mm:ss.SSS ZZZ",
                "MMM dd HH:mm:ss.SSS zzz",
                "MMM  d HH:mm:ss.SSS ZZZ",
                "MMM  d HH:mm:ss.SSS zzz",
                "MMM dd HH:mm:ss ZZZ",
                "MMM dd HH:mm:ss zzz",
                "MMM  d HH:mm:ss ZZZ",
                "MMM  d HH:mm:ss zzz",
                "MMM dd HH:mm:ss.SSS",
                "MMM  d HH:mm:ss.SSS",
                "MMM dd HH:mm:ss",
                "MMM  d HH:mm:ss",

                # Nexus
                "YYYY MMM dd HH:mm:ss.SSS ZZZ",
                "YYYY MMM dd HH:mm:ss.SSS zzz",
                "YYYY MMM dd HH:mm:ss ZZZ",
                "YYYY MMM dd HH:mm:ss zzz",
                "YYYY MMM dd HH:mm:ss.SSS",

                # Hail marry
                "ISO8601"
            ]
        }
        
        mutate {
            gsub => [
                "severity_level", "0", "0 - Emergency",
                "severity_level", "1", "1 - Alert",
                "severity_level", "2", "2 - Critical",
                "severity_level", "3", "3 - Error",
                "severity_level", "4", "4 - Warning",
                "severity_level", "5", "5 - Notification",
                "severity_level", "6", "6 - Informational"
            ]
        }
        
        translate {
            field       => "facility"
            destination => "facility_full"
            dictionary_path => "${SYSLOG_DICTIONARY_PATH:/opt/logstash-syslog-parser/dictionaries}/facilities.yml"
            fallback => "%{[facility]}"
            refresh_behaviour => "replace"
        }
    }
}